[
 "architecture/architecture-eventdriven-statemachine",
 "buildtool/gradle-standard",
 "cleancode/cleancode-knowledge",
 "cleancode/cleancode-readability",
 "database/database-data-anonymization",
 "designpattern/designpattern-callback",
 "functional/functional-defensive-copy",
 "functional/functional-potential-errors",
 "java/java-anonymous-class",
 "java/java-date",
 "java/java-deserialize-generic",
 "java/java-effective-final",
 "java/java-garbage-collection",
 "java/java-gc-collector",
 "java/java-gc-generation-design",
 "java/java-mapstruct",
 "kotlin",
 "kotlin/kotlin-action-calculate",
 "kotlin/kotlin-assign-type",
 "kotlin/kotlin-companion-object",
 "kotlin/kotlin-compiler-k2",
 "kotlin/kotlin-continuation",
 "kotlin/kotlin-coroutine-cancel",
 "kotlin/kotlin-coroutine-deferred-async",
 "kotlin/kotlin-coroutine-dispatcher",
 "kotlin/kotlin-coroutine-exception",
 "kotlin/kotlin-coroutine-thread",
 "kotlin/kotlin-coroutines",
 "kotlin/kotlin-coroutines-webflux",
 "kotlin/kotlin-delegate",
 "kotlin/kotlin-deserialize-dataclass",
 "kotlin/kotlin-equality",
 "kotlin/kotlin-exceptions-restriction",
 "kotlin/kotlin-first-citizen",
 "kotlin/kotlin-functor-monad",
 "kotlin/kotlin-generics",
 "kotlin/kotlin-high-order-functions",
 "kotlin/kotlin-inline",
 "kotlin/kotlin-jdbc-batch",
 "kotlin/kotlin-ksp",
 "kotlin/kotlin-lambda",
 "kotlin/kotlin-minimizing-mental-complexity",
 "kotlin/kotlin-mockk",
 "kotlin/kotlin-mockk-springmockk",
 "kotlin/kotlin-mutability-restriction",
 "kotlin/kotlin-nested",
 "kotlin/kotlin-null-handling-safely",
 "kotlin/kotlin-null-safety",
 "kotlin/kotlin-philosophy",
 "kotlin/kotlin-preconditions",
 "kotlin/kotlin-property",
 "kotlin/kotlin-range",
 "kotlin/kotlin-range-progression",
 "kotlin/kotlin-receiver-lambda",
 "kotlin/kotlin-relaxed-mockk",
 "kotlin/kotlin-restdocs-api-enum-design",
 "kotlin/kotlin-sealed",
 "kotlin/kotlin-sequence",
 "kotlin/kotlin-simplesyntax",
 "kotlin/kotlin-source-machine",
 "kotlin/kotlin-structured-concurrency",
 "kotlin/kotlin-suspend",
 "kotlin/kotlin-utils",
 "kotlin/kotlin-value-object",
 "logging/logging-webflux-kotlin",
 "oop/oop-firstclasscollection",
 "realworld/realworld-smarthome-control-command",
 "realworld/realworld-vehicle-controls",
 "refactoring/refactoring-aliasbug",
 "refactoring/refactoring-parallelchange",
 "spring/spring-jackson",
 "spring/spring-pojo",
 "test/test-design-by-contract"
]